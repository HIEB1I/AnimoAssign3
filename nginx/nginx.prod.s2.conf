upstream frontend_upstream {
  server frontend-secondary:80   weight=10;   # local container
  server 10.1.11.16:18080        backup;      # S1 as backup
  keepalive 32;
}

upstream backend_upstream {
  server backend-secondary:8000  weight=10;   # local container
  server 10.1.11.16:18000        backup;      # S1 as backup
  keepalive 32;
}

upstream analytics_upstream {
  server analytics-secondary:8000 weight=10;  # local container
  server 10.1.11.16:18100         backup;     # S1 as backup
  keepalive 32;
}

server {
  listen 80;
  listen [::]:80;
  server_name ccscloud.dlsu.edu.ph;

  access_log /dev/stdout;
  error_log  /dev/stderr info;

  client_max_body_size 10m;

  # Common proxy params
  proxy_set_header Host              $host;
  proxy_set_header X-Real-IP         $remote_addr;
  proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_http_version 1.1;
  proxy_connect_timeout 10s;
  proxy_read_timeout    60s;

  # If the primary upstream fails with these, try the backup once
  proxy_next_upstream error timeout http_502 http_503 http_504;
  proxy_next_upstream_tries 2;

  # 1) /api → backend ROOT (strip /api)
  location /api/ {
    proxy_pass http://backend_upstream/;   # trailing slash strips /api
  }

  # 2) /analytics → analytics ROOT (strip /analytics)
  location /analytics/ {
    proxy_pass http://analytics_upstream/; # NOTE the trailing slash
  }

  # 3) everything else → frontend
  location / {
    proxy_pass http://frontend_upstream;   # no slash; keep path
  }
}
