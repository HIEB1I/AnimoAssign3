# nginx.prod.s1.conf

upstream frontend_upstream {
    server frontend-primary:80 weight=10;
    server 10.1.11.17:28080 backup;
    keepalive 32;
}

upstream backend_upstream {
    server backend-primary:8000 weight=10;
    server 10.1.11.17:28000 backup;
    keepalive 32;
}

upstream analytics_upstream {
    server analytics-primary:8000 weight=10;
    server 10.1.11.17:28100 backup;
    keepalive 32;
}

upstream frontend_stg_upstream { 
    server 127.0.0.1:18080; 
}
upstream backend_stg_upstream  { 
    server 127.0.0.1:18000; 
}
upstream analytics_stg_upstream{ 
    server 127.0.0.1:18100; 
}

# Staging SPA (proxy whole subpath; upstream handles SPA fallback)
location /staging/ {
  proxy_pass http://frontend_stg_upstream/;  # trailing slash strips '/staging' prefix
  proxy_http_version 1.1;
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  # WebSocket support (if any in SPA)
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection "upgrade";
}

# Staging API
location /staging/api/ {
  proxy_pass http://backend_stg_upstream/;   # '/staging/api/' -> '/'
  proxy_http_version 1.1;
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection "upgrade";
}

# Staging Analytics
location /staging/analytics/ {
  proxy_pass http://analytics_stg_upstream/; # '/staging/analytics/' -> '/'
  proxy_http_version 1.1;
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection "upgrade";
}

server {
  listen 80;
  listen [::]:80;
  server_name ccscloud.dlsu.edu.ph;

  access_log /dev/stdout;
  error_log  /dev/stderr info;

  # Increase body size for JSON/posts (optional)
  client_max_body_size 10m;

  # Common proxy headers/timeouts
  proxy_set_header Host              $host;
  proxy_set_header X-Real-IP         $remote_addr;
  proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_http_version 1.1;
  proxy_connect_timeout 10s;
  proxy_read_timeout    60s;

  # Prefer the primary; if it’s down, try backup
  proxy_next_upstream error timeout http_502 http_503 http_504;
  proxy_next_upstream_tries 2;

  # 1) /api → backend ROOT (strip /api)
  location /api/ {
    proxy_pass http://backend_upstream/;   # NOTE trailing slash → /api/foo -> /foo
  }

  # 2) /analytics → analytics ROOT (strip /analytics)
  location /analytics/ {
    proxy_pass http://analytics_upstream/; # NOTE trailing slash
  }

  # 3) Frontend (SPA): serve everything else from frontend
  location / {
    proxy_pass http://frontend_upstream;   # NO trailing slash → keep paths as-is
  }

  # (Optional) health endpoint straight to backend
  location = /healthz {
    proxy_pass http://backend_upstream/health;
  }
}

