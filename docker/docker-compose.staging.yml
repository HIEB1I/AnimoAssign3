services:
  mongo-stg:
    image: mongo:7
    container_name: mongo-stg
    command: ["--bind_ip_all"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      # map legacy names some files expect
      MONGO_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo_data_staging:/data/db
      - /opt/AnimoAssign3-staging/db/seed:/docker-entrypoint-initdb.d:ro
    ports:
      - "127.0.0.1:27018:27017"
    restart: unless-stopped

  backend:
    extends:
      file: docker-compose.prod.s1.yml
      service: backend-primary          # or backend-primary if that's the key in prod.s1
    container_name: backend-stg
    environment:
      MONGODB_URI: ${BACKEND_MONGODB_URI}
    depends_on: [mongo-stg]
    ports:
      - "18000:8000"
    restart: unless-stopped

  analytics:
    extends:
      file: docker-compose.prod.s1.yml
      service: analytics-primary
    container_name: analytics-stg
    environment:
      ANALYTICS_MONGODB_URI: ${ANALYTICS_MONGODB_URI}
    depends_on: [mongo-stg]
    ports:
      - "18100:8000"
    restart: unless-stopped

  # Nginx serving the staging SPA build
  frontend-stg:
    container_name: frontend-stg
    build:
      context: ../frontend
      dockerfile: ockerfile  # use your existing one
      args:
        VITE_BASE: ${VITE_BASE}                 # <-- passes /staging/
    ports:
      - "18080:80"                              # internal exposure
    depends_on: 
      - backend
      - analytics
    restart: unless-stopped

volumes:
  mongo_data_staging:
